{{- if (.Values.ldap) -}}
{{- with .Values.ldap -}}
---
# Integrates LDAP as an auth provider
# References ldap-bind-secret.yaml
apiVersion: config.openshift.io/v1
kind: OAuth
metadata:
  name: cluster
  annotations:
    include.release.openshift.io/ibm-cloud-managed: 'true'
    include.release.opeshift.io/self-managed-high-availability: 'true'
    include.release.openshift.io/single-node-developer: 'true'
    release.openshift.io/create-only: 'true'
spec:
  identityProviders:
    - ldap:
      attributes:
        email:
        - mail
        id:
        - {{ .accountName }}
        name:
        - displayName
        preferredUsername:
        - {{ .accountName }}
      bindDN: {{ .bindDN }}
      bindPassword:
        name: ldap-bind-password
      insecure: true
      url: {{ .server.urlFull }}
      mappingMethod: claim
      name: {{ .server.name }}
      type: LDAP

---
# The secret used to hold the password to talk to LDAP
# Used in ldap-oauth-provider.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ldap-bind-password
  namespace: openshift-config
data:
  bindPassword: {{ .bindPW | b64enc }}

---
# Sets up syncing auth information with an LDAP server
apiVersion: v1
kind: LDAPSyncConfig
metadata:
  name: {{ .syncConfigName }}
bindDN: {{ .bindDN }}
bindPassword: "{{ .bindPW }}"
insecure: true
url: {{ .server.urlShort }}
groupUIDNameMapping:
  # TODO:: let this be more flexible by inserting yaml instead. Ran into quoting issue
  "{{ .groupUIDNameMappingKey }}": Administrators
augmentedActiveDirectory:
  groupUIDAttributes: dn
  groupNameAttributes: [ cn ]
  groupMembershipAttributes: [ memberOf ]
  userNameAttributes: [ {{ .accountName }} ]
  groupsQuery:
    baseDN: "{{ .queries.group.baseDN }}"
    scope: base
    derefAliases: never
    pagesize: 0
  usersQuery:
    baseDN: "{{ .queries.user.baseDN }}"
    scope: sub
    derefAliases: never
    filter: {{ .queries.user.filter }}
    pageSize: 0
{{- end -}}
{{- end -}}